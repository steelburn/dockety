name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for release'
        required: true
        type: string

jobs:
  build-and-push:
    name: Build and push Docker images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Extract metadata
        id: meta
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            TAG_NAME=${{ github.event.release.tag_name }}
          else
            TAG_NAME=${{ inputs.tag_name }}
          fi
          TIMESTAMP=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "version=${TAG_NAME#v}" >> $GITHUB_OUTPUT
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/dockety-backend:${{ steps.meta.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/dockety-backend:${{ steps.meta.outputs.tag_name }}
            ghcr.io/${{ github.repository_owner }}/dockety-backend:latest
          labels: |
            org.opencontainers.image.title=Dockety Backend
            org.opencontainers.image.description=Docker monitoring dashboard backend
            org.opencontainers.image.version=${{ steps.meta.outputs.version }}
            org.opencontainers.image.created=${{ steps.meta.outputs.timestamp }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/dockety-frontend:${{ steps.meta.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/dockety-frontend:${{ steps.meta.outputs.tag_name }}
            ghcr.io/${{ github.repository_owner }}/dockety-frontend:latest
          labels: |
            org.opencontainers.image.title=Dockety Frontend
            org.opencontainers.image.description=Docker monitoring dashboard frontend
            org.opencontainers.image.version=${{ steps.meta.outputs.version }}
            org.opencontainers.image.created=${{ steps.meta.outputs.timestamp }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate release artifacts
        run: |
          # Create a simple release notes file
          cat > release-notes.md << EOF
          # Dockety ${{ steps.meta.outputs.tag_name }}

          Docker monitoring dashboard release ${{ steps.meta.outputs.tag_name }}.

          ## Images Published

          - \`ghcr.io/${{ github.repository_owner }}/dockety-backend:${{ steps.meta.outputs.version }}\`
          - \`ghcr.io/${{ github.repository_owner }}/dockety-frontend:${{ steps.meta.outputs.version }}\`

          ## Deployment

          ### Using Docker Compose (Pull from Registry)
          \`\`\`bash
          # Edit docker-compose.yml and uncomment the image lines
          docker-compose up -d
          \`\`\`

          ### Using Docker Run
          \`\`\`bash
          # Backend
          docker run -d -v /var/run/docker.sock:/var/run/docker.sock -v dockety_data:/app/data ghcr.io/${{ github.repository_owner }}/dockety-backend:${{ steps.meta.outputs.version }}

          # Frontend
          docker run -d -p 8090:80 ghcr.io/${{ github.repository_owner }}/dockety-frontend:${{ steps.meta.outputs.version }}
          \`\`\`

          ## What's Changed

          See [CHANGELOG](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
          EOF

      - name: Upload release artifacts
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./release-notes.md
          asset_name: release-notes-${{ steps.meta.outputs.tag_name }}.md
          asset_content_type: text/markdown